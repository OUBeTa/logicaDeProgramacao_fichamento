inicio
    funcao orderList(v)
        booleano isOrdered <- falso
        inteiro aux
        
        enquanto não isOrdered faça
            isOrdered <- verdadeiro
            
            para i de 0 até comprimento(v) - 2 passo 1 faça
                se v[i] > v[i + 1] então
                    aux <- v[i]
                    v[i] <- v[i + 1]
                    v[i + 1] <- aux
                    isOrdered <- falso
                fimse
            fimpara
        fimenquanto
    fimfuncao
    
    inteiro records <- 20
    vetor inteiro v1[records]
    vetor inteiro v2[records]
    
    inteiro current <- 0
    texto result <- ""
    
    inteiro i
    
    para i de 0 até records - 1 passo 1 faça
        escreva("Entre com v1[", i, "]")
        leia(v1[i])
    fimpara
    
    para i de 0 até records - 1 passo 1 faça
        escreva("Entre com v2[", i, "]")
        leia(v2[i])
    fimpara
    
    orderList(v1)
    orderList(v2)
    
    para i de 0 até records - 1 passo 1 faça
        para j de 0 até records - 1 passo 1 faça
            se v1[i] = v2[j] e v1[i] != current então
                se j = 0 então
                    result <- result + "["
                fimse
                
                se j < records - 1 então
                    result <- result + v1[i] + ","
                senao
                    result <- result + v1[i] + "]"
                fimse
                
                current <- v1[i]
            fimse
        fimpara
    fimpara
    
    escreva("A -> ", v1)
    escreva("B -> ", v2)
    escreva("Repetidos: ", result)
fim
